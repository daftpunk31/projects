# -*- coding: utf-8 -*-
"""iris.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JgJ2SOrJqrl01HkPTY-qbnT2BWhPhLOE
"""

!pip install anvil-uplink

from google.colab import files
uploaded=files.upload()

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn import metrics
from sklearn.linear_model import LogisticRegression # for Logistic Regression Algorithm
from sklearn.model_selection import train_test_split
from sklearn.model_selection import cross_val_score
from sklearn.metrics import mean_squared_error
# from sklearn.datasets import load_boston
import warnings
warnings.filterwarnings(action='ignore')

data = pd.read_csv("Iris.csv")

data=data.drop("Id",1)

data.info()

data.head()

train,test = train_test_split(data, test_size=0.3)
print(train.shape)
print(test.shape)

train_x = train[["SepalLengthCm", "SepalWidthCm", "PetalLengthCm", "PetalWidthCm"]]
train_y=train[["Species"]]

test_x = test[["SepalLengthCm", "SepalWidthCm", "PetalLengthCm", "PetalWidthCm"]]
test_y = test[["Species"]]

print(train_x.shape)

print(test_x.shape)

import anvil.server

anvil.server.connect("UH4RV6GBMQLU5JP5LP4L3YY4-HQBH35M6APZ2TLTH")

model = LogisticRegression()
model.fit(train_x, train_y)

# @anvil.server.callable
# def predict_iris(sepal_length, sepal_width, petal_length, petal_width):
#   classification = model.predict([[sepal_length, sepal_width, petal_length, petal_width]])
#   return classification
  # return data.target_names[classification][0]

# prediction = model.predict(test_x)
# print('The accuracy of Logistic Regression is: ', metrics.accuracy_score(prediction, test_y))

# from sklearn.metrics import accuracy_score
# pred=model.predict(test_x)
# score_lr=round(accuracy_score(pred,test_y)*100,2)
# print("The accuracy score achieved using Logistic Regression is:"+str(score_lr)+"%")
# # "The accuracy score achieved using Logistic Regression is:95.56%"

@anvil.server.callable
def predict_iris(sepal_length, sepal_width, petal_length, petal_width):
  prediction = model.predict([[sepal_length, sepal_width, petal_length, petal_width]])
  return prediction[0]

predict_iris(4.4, 3.2, 1.3, 0.2)

anvil.server.wait_forever()